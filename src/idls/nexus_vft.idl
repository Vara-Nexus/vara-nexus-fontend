constructor {
  Initialize : (name: str, symbol: str, decimals: u8, initial_balances: vec struct { actor_id, u256 });
  New : ();
};

service NexusVft {
  AddAdmin : (new_admin: actor_id) -> null;
  Approve : (spender: actor_id, value: u256) -> bool;
  CreateVft : () -> actor_id;
  InitVft : (name: str, symbol: str, decimals: u8, initial_balances: vec struct { actor_id, u256 }) -> bool;
  Mint : (to: actor_id, amount: u256) -> bool;
  RemoveAdmin : (admin: actor_id) -> null;
  Transfer : (to: actor_id, value: u256) -> bool;
  TransferFrom : (from: actor_id, to: actor_id, value: u256) -> bool;
  query Allowance : (owner: actor_id, spender: actor_id) -> u256;
  query BalanceOf : (account: actor_id) -> u256;
  query Balances : () -> vec struct { actor_id, u256 };
  query Decimals : () -> u8;
  query IsAdmin : (actor: actor_id) -> bool;
  query Name : () -> str;
  query Symbol : () -> str;
  query TotalSupply : () -> u256;

  events {
    AdminAdded: struct { admin: actor_id };
    AdminRemoved: struct { admin: actor_id };
    InitVft: struct { name: str, symbol: str, decimals: u8, initial_balances: vec struct { actor_id, u256 } };
  }
};

